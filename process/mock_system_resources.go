// Code generated by MockGen. DO NOT EDIT.
// Source: process/system_resources.go

// Package process is a generated GoMock package.
package process

import (
	gomock "github.com/golang/mock/gomock"
	scantron "github.com/pivotal-cf/scantron"
	reflect "reflect"
)

// MockSystemResources is a mock of SystemResources interface
type MockSystemResources struct {
	ctrl     *gomock.Controller
	recorder *MockSystemResourcesMockRecorder
}

// MockSystemResourcesMockRecorder is the mock recorder for MockSystemResources
type MockSystemResourcesMockRecorder struct {
	mock *MockSystemResources
}

// NewMockSystemResources creates a new mock instance
func NewMockSystemResources(ctrl *gomock.Controller) *MockSystemResources {
	mock := &MockSystemResources{ctrl: ctrl}
	mock.recorder = &MockSystemResourcesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSystemResources) EXPECT() *MockSystemResourcesMockRecorder {
	return m.recorder
}

// GetProcesses mocks base method
func (m *MockSystemResources) GetProcesses() ([]scantron.Process, error) {
	ret := m.ctrl.Call(m, "GetProcesses")
	ret0, _ := ret[0].([]scantron.Process)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProcesses indicates an expected call of GetProcesses
func (mr *MockSystemResourcesMockRecorder) GetProcesses() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProcesses", reflect.TypeOf((*MockSystemResources)(nil).GetProcesses))
}

// GetPorts mocks base method
func (m *MockSystemResources) GetPorts() ProcessPorts {
	ret := m.ctrl.Call(m, "GetPorts")
	ret0, _ := ret[0].(ProcessPorts)
	return ret0
}

// GetPorts indicates an expected call of GetPorts
func (mr *MockSystemResourcesMockRecorder) GetPorts() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPorts", reflect.TypeOf((*MockSystemResources)(nil).GetPorts))
}
