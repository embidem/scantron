// Code generated by MockGen. DO NOT EDIT.
// Source: tlsscan/tls_scanner.go

// Package tlsscan is a generated GoMock package.
package tlsscan

import (
	gomock "github.com/golang/mock/gomock"
	scantron "github.com/pivotal-cf/scantron"
	scanlog "github.com/pivotal-cf/scantron/scanlog"
	reflect "reflect"
)

// MockTlsScanner is a mock of TlsScanner interface
type MockTlsScanner struct {
	ctrl     *gomock.Controller
	recorder *MockTlsScannerMockRecorder
}

// MockTlsScannerMockRecorder is the mock recorder for MockTlsScanner
type MockTlsScannerMockRecorder struct {
	mock *MockTlsScanner
}

// NewMockTlsScanner creates a new mock instance
func NewMockTlsScanner(ctrl *gomock.Controller) *MockTlsScanner {
	mock := &MockTlsScanner{ctrl: ctrl}
	mock.recorder = &MockTlsScannerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTlsScanner) EXPECT() *MockTlsScannerMockRecorder {
	return m.recorder
}

// Scan mocks base method
func (m *MockTlsScanner) Scan(logger scanlog.Logger, host, port string) (scantron.CipherInformation, error) {
	ret := m.ctrl.Call(m, "Scan", logger, host, port)
	ret0, _ := ret[0].(scantron.CipherInformation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Scan indicates an expected call of Scan
func (mr *MockTlsScannerMockRecorder) Scan(logger, host, port interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scan", reflect.TypeOf((*MockTlsScanner)(nil).Scan), logger, host, port)
}

// FetchTLSInformation mocks base method
func (m *MockTlsScanner) FetchTLSInformation(host, port string) (*scantron.Certificate, bool, error) {
	ret := m.ctrl.Call(m, "FetchTLSInformation", host, port)
	ret0, _ := ret[0].(*scantron.Certificate)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// FetchTLSInformation indicates an expected call of FetchTLSInformation
func (mr *MockTlsScannerMockRecorder) FetchTLSInformation(host, port interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchTLSInformation", reflect.TypeOf((*MockTlsScanner)(nil).FetchTLSInformation), host, port)
}
